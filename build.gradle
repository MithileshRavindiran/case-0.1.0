plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.0'
    id "org.openapi.generator" version "6.6.0"
}

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'

repositories {
    mavenCentral()
}

sourceCompatibility = 11
targetCompatibility = 11

version = '0.1.0'

dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.h2database:h2'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    //implementation 'io.micrometer:micrometer-registry-prometheus:1.11.0'
    implementation 'io.micrometer:micrometer-core:1.11.0'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.8'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation group: 'org.mapstruct', name: 'mapstruct-jdk8', version: '1.2.0.Final'
    compileOnly 'org.openapitools:jackson-databind-nullable:0.2.6'
    compileOnly 'org.projectlombok:lombok'
    compileOnly 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

test {
    useJUnitPlatform()
}

openApiGenerate {
    generatorName.set("spring")
    inputSpec.set("$rootDir/src/main/openapi/travel-api.yaml")
    outputDir.set("$buildDir/generated/openapi")
    apiPackage.set("com.afkl.travel.excercise.api")
    invokerPackage.set("com.afkl.travel.excercise.invoker")
    modelPackage.set("com.afkl.travel.excercise.model")
    configOptions.set([
            dateLibrary: "java8",
            interfaceOnly: "true",
            useTags: "true"
    ])
}

task runSwaggerUI(type: Exec) {
    executable("docker")
    args('run'
        , '-p', '8050:8082'
        , '-e', "SWAGGER_JSON=/openapi/travel-api.yaml"
        , '-v', "$projectDir/src/main/openapi:/openapi"
        , 'swaggerapi/swagger-ui')
}

compileJava.dependsOn tasks.openApiGenerate

sourceSets {
    main {
        java {
            srcDir("$buildDir/generated/openapi/src/main/java")
        }
    }
}